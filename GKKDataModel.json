Queries we want. 

1) Want to display the orders for a consumer and producer.

2) Want consumers to search for food in their location, at a certain time. 

// User documents on there own, will allow consumers to see what foods a favorite producer has to offer. 
Producer Documents
{
    "_id": 123456,
    "name": Bob,
    "phoneNum": 815-765-7895,
    "address": {
        "street": 123 Fake Street,
        "city": DeKalb,
        "state": IL,
        "zip": 60000,
    },
    "food": [foodId, foodId, ... ],
    "averageConsumerRating": 4,
    // Reviews left on user '123456' by a producer
    "reviewsForProducer": [
        {
            "rating": 5,
            "description": "Food was nice and warm",
        }
        {
            "rating": 2,
            "description": "Food was 10 minutes late and order was missing cheese",
        }
    ],
    // Orders consumer has
    // I'm thinking we have a bool value, toPrepare, which tells us if the order
    // is to be prepared by user '123456' or if they ordered it. 
    "acceptedOrdersToCreate": [
        {
            "items": [{
                quantity: 2,
                food: foodId,
            }],
            "status": "Paid",
            "consumerId": 124578,
            "amount": $7.00,
            "pickUpDateTime": 09/20/2021 8:00pm,   
        },
        {
            "items": [{
                "quantity": 5,
                "food": foodId,
            },
            {
                ""quantity"": 6,
                "food": foodId
            }],
            "status": "Not Paid",
            "consumerId": 124586,
            "amount": 17.00,
            "pickUpDateTime": 09/10/2021 5:00pm       
        }
    ],

    "pendingOrderForProducer": [

    ]

    // Batch process that will clear a days menu array after the day has passed
    "Menu": {
        "Sunday": [FoodID],
        "Monday": [FoodID, FoodId,  ...],
        "Tuesday": [FoodID, FoodId, ...],
        "Wednesday": [FoodID, FoodId, ...],
        "Thursday": [FoodID, FoodId, ...],
        "Friday": [FoodID, FoodId, ...],
        "Saturday": [FoodID, FoodId, ...], 
    }
}

Consumer Documents
{
    "_id": 123456,
    "name": Bob,
    "phoneNum": 815-765-7895,
    "address": {
        "street": 123 Fake Street,
        "city": DeKalb,
        "state": IL,
        "zip": 60000,
    },
    "food": [foodId, foodId, ... ],
    "averageConsumerRating": 4,
    // Reviews left on user '123456' by a producer
    "reviewsForConsumer": [
        {
            "rating": 4,
            "description": "Arrived on time for his food",
        }
        {
            "rating": 1,
            "description": "Did not pick up food!",
        }
    ],
    // Orders consumer has
    // I'm thinking we have a bool value, toPrepare, which tells us if the order
    // is to be prepared by user '123456' or if they ordered it. 
    "acceptedOrdersToPickup": [
        {
            "items": [{
                "quantity": 2,
                "food": foodId,
            }],
            "status": "Paid",
            "producerId": 124578,
            "amount": $7.00,
            "pickUpDateTime": 09/20/2021 8:00pm,   
        },
        {
            "items": [{
                "quantity": 5,
                "food": foodId,
            },
            {
                "quantity": 6,
                "food": foodId
            }],
            "status": "Not Paid",
            "producerId": 124586,
            "amount": 17.00,
            "pickUpDateTime": 09/10/2021 5:00pm       
        }
    ],

    "pendingOrderForConsumer": [
        
    ]

    // Batch process that will clear a days menu array after the day has passed
    "Menu": {
        "Sunday": [FoodID],
        "Monday": [FoodID, FoodId,  ...],
        "Tuesday": [FoodID, FoodId, ...],
        "Wednesday": [FoodID, FoodId, ...],
        "Thursday": [FoodID, FoodId, ...],
        "Friday": [FoodID, FoodId, ...],
        "Saturday": [FoodID, FoodId, ...], 
    }
}

// Separate Food document which has a location property.
// Producer reviews are tied to food, not user
// Limit of 50 food items per user
Food Documents
{
    "_id": 12568, 
    "userId": 546,
    "dietRestriction": "N/A",
    "description": "American French Fries",
    "photo": "image.jpg",
    "price": 5.00,
    "rating": 4.54, 
    "name": "French Fries",
    "reviews":[ 
        {
            "userId": 123456,
            "rating": 2,
            "description": "Food wasn't properly prepared. Food was cold",
        }
    ],
}

Notes:
Whenever a new review is added, the averageRating value needs to be recalculated. 

Could make reviews a reference. 

Embedded = less queries but more data

*************************************************************************************************

When ever a food is added by a producer, the app assigns the Food document to the correct
array in the 'Location' collection. 
A query will push the food into the respective array. 

User Cases:

Use Case 1:
Consumer wants to find Chinese food on the 9th for breakfast. 
App would query the Location collection and find the document that corresponds
to the 9th. 

Use Case 2: 
Producer wants to add a new food to their menu.
App will add a Food docuemnts to that users Document food array. 

Concerns:
How will a consumer search for the best producers in a location?