Producer Documents
{
    "_id": 123456,
    "name": Bob,
    "phoneNum": 815-765-7895,
    "address": {
        "street": 123 Fake Street,
        "city": DeKalb,
        "state": IL,
        "zip": 60000,
    },
    // Bounded to 50
    "food": [foodId, foodId, ... ],
    "averageProducerRating": 5,

    // Orders consumer has
    // I'm thinking we have a bool value, toPrepare, which tells us if the order
    // is to be prepared by user '123456' or if they ordered it. 
    "acceptedOrdersToCreate": [
        {
            "items": [{
                quantity: 2,
                food: foodId,
            }],
            "status": "Paid",
            "consumerId": 124578,
            "amount": $7.00,
            "pickUpDateTime": 09/20/2021 8:00pm,   
        },
        {
            "items": [{
                "quantity": 5,
                "food": foodId,
            },
            {
                ""quantity"": 6,
                "food": foodId
            }],
            "status": "Not Paid",
            "consumerId": 124586,
            "amount": 17.00,
            "pickUpDateTime": 09/10/2021 5:00pm       
        }
    ],

    "pendingOrderForProducer": [

    ]

    // Batch process that will clear a days menu array after the day has passed
    "Menu": {
        "Sunday": [FoodID],
        "Monday": [FoodID, FoodId,  ...],
        "Tuesday": [FoodID, FoodId, ...],
        "Wednesday": [FoodID, FoodId, ...],
        "Thursday": [FoodID, FoodId, ...],
        "Friday": [FoodID, FoodId, ...],
        "Saturday": [FoodID, FoodId, ...], 
    }
}
Reviews for Producers Documents
{
    // Review for chef 123456
    "_id": 1,
    "producerId": 123456, 
    "rating": 5,
    // Reviews bounded to 300 characters
    "description": "Food was nice and warm",
}
{
    // Review for chef 123456
    "_id": 2,
    "producerId": 123456, 
    "rating": 5,
    "description": "Food was amazing",
}

Consumer Documents
{
    "_id": 555555,
    "name": Bob,
    "phoneNum": 815-765-7895,
    "address": {
        "street": 123 Fake Street,
        "city": DeKalb,
        "state": IL,
        "zip": 60000,
    },
    "food": [foodId, foodId, ... ],
    "averageConsumerRating": 2.5,

    // Orders consumer has
    // I'm thinking we have a bool value, toPrepare, which tells us if the order
    // is to be prepared by user '123456' or if they ordered it. 
    "acceptedOrdersToPickup": [
        {
            "items": [{
                "quantity": 2,
                "food": foodId,
            }],
            "status": "Paid",
            "producerId": 124578,
            "amount": $7.00,
            "pickUpDateTime": 09/20/2021 8:00pm,   
        },
        {
            "items": [{
                "quantity": 5,
                "food": foodId,
            },
            {
                "quantity": 6,
                "food": foodId
            }],
            "status": "Not Paid",
            "producerId": 124586,
            "amount": 17.00,
            "pickUpDateTime": 09/10/2021 5:00pm       
        }
    ],

    "pendingOrderForConsumer": [
        
    ]

    // Batch process that will clear a days menu array after the day has passed
    "Menu": {
        "Sunday": [FoodID],
        "Monday": [FoodID, FoodId,  ...],
        "Tuesday": [FoodID, FoodId, ...],
        "Wednesday": [FoodID, FoodId, ...],
        "Thursday": [FoodID, FoodId, ...],
        "Friday": [FoodID, FoodId, ...],
        "Saturday": [FoodID, FoodId, ...], 
    }
}

Reviews for Consumer Documents
{
    // Review for chef 123456
    "_id": 1,
    "consumerId": 555555, 
    "rating": 5,
    // Reviews bounded to 300 characters
    "description": "Arrived on time for his food",
}
{
    // Review for chef 123456
    "_id": 2,
    "consumerId": 555555, 
    "rating": 1,
    "description": "Did not pick up food!",
}

// Separate Food document which has a location property.
// Producer reviews are tied to food, not user
// Limit of 50 food items per user
Food Documents
{
    "_id": 12568, 
    "producerId": 546,
    "dietRestriction": "N/A",
    "description": "American French Fries",
    "photo": "image.jpg",
    "price": 5.00,
    "rating": 4.54, 
    "name": "French Fries",
}

Reviews for Food
{
    "_id": 535,
    "foodId": 12568,
    "rating": 5,
    "description": "Food was amazing, tasted like my grandmas"
}

Notes for implementation:
Whenever a new review is added, the averageRating value needs to be recalculated. 

Embedded documents are most useful when you only use a single read statement to get all the data needed. 

Manual references are when you save the _id field of one document in another document as a reference. Then you application can run a second query to return the related data. 
Source: https://docs.mongodb.com/manual/reference/database-references/
*************************************************************************************************
Most used queries. 

1) Display the orders for a consumer and producer.

2) Display the menu items for a single producer. 

3) Display the food items offered in a set location, set time and diet restriction


User Cases:

Use Case 1:
Consumer wants to find Chinese food on the 9th for breakfast. 
App would query the Location collection and find the document that corresponds
to the 9th. 

Use Case 2: 
Producer wants to add a new food to their menu.
App will insert a new food document to the Food collection. 
App will use the producersId to find an the producer's document. 
App will add the foodId to the Food array in the producer's document

Concerns:
How will a consumer search for the best producers in a location?